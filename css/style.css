/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
    /* 
    62.5% of the default font-size of 16px amounts to computed value of 10px 
    Using a percentage for font-size for html allows the user to zoom in and out manually in the browser
    Using px to set declare font-size for html is bad practice because it doesn't allow users to manually zoom in and out manually in the browser
    */
}

/* 
use inheritance to let child elements of body 
got lato from google fonts
*/
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: #777777;
    padding: 3rem;
}

.header {
    height: 95vh;
    /* To specify gradient, always use background property*/
    background-image: linear-gradient(
        to right bottom,
        #7ed56fce,
        #28b485d0),
    url(../img/hero.jpg);
    background-size: cover; 
    /* -> this will cover whatever the width of the element it will try to fit the element in the box*/
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
}

.text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* the top & left are in relation to the parent element
    whereas the tranform translate is in relation to the element itself
    This makes it possible to have this element at the center
    */
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden;
    /* backface-visibility: hidden; corrects the little shaking that happens at the end in animations */
    margin-bottom: 6rem;
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInFromLeft 1.2s ease-out;
    /* 2 properties required for animation is animation-name and animation-duration properties
    also above is shorthand version for animation property
    animation-name: moveInFromLeft;
    animation-duration: 1.2s;
    animation-timing-function: ease-out; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInFromRight 1.2s ease-out;
}



@keyframes moveInFromLeft {
    /* for animations, browers are mostly optimized for opacity & transform property */
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    
    80% {
        transform: translateX(1rem);
    }
    
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInFromRight {
    /* for animations, browers are mostly optimized for opacity & transform property */
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    
    80% {
        transform: translateX(-1rem);
    }
    
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInFromBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }
    
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 5rem;
    transition: all 0.2s;
    /* this line above makes the animation between regular & hover & active smoother */
    position: relative;
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-.3rm);
    box-shadow: 0 1rem 2rem rgb(0, 0, 0, 0.2);
}
 
.btn:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgb(0, 0, 0, 0.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 5rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInFromBottom 0.5s ease-out 0.75s backwards;
}